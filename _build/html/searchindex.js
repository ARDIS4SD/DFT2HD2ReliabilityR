Search.setIndex({"docnames": ["docs/FaultTreeLib", "docs/FaultTreeRLib", "docs/HasseDiagramLib", "docs/LogicDoorLib", "docs/modules", "index"], "filenames": ["docs\\FaultTreeLib.rst", "docs\\FaultTreeRLib.rst", "docs\\HasseDiagramLib.rst", "docs\\LogicDoorLib.rst", "docs\\modules.rst", "index.rst"], "titles": ["FaultTreeLib module", "FaultTreeRLib module", "HasseDiagramLib module", "LogicDoorLib module", "source", "Welcome to DFT2HD2ReliabilityR\u2019s documentation!"], "terms": {"biblioth\u00e8qu": [0, 1, 2], "util": [0, 1, 2], "class": [0, 1, 2], "defaulttre": [], "n": [0, 1, 3], "sourc": [0, 1, 2, 3, 5], "base": [0, 1, 2], "object": [0, 1, 2], "idxnod": [0, 1, 4], "indic": [0, 1, 3], "none": [0, 1, 2, 3], "It": [0, 1, 2, 3], "return": [0, 1, 2, 3], "index": [0, 1, 3, 5], "node": [0, 1, 2], "list": [0, 1, 2, 3], "paramet": [0, 1, 2, 3], "The": [0, 1, 2, 3], "you": [0, 3], "want": [0, 3], "find": 0, "inorder2": [0, 1, 2, 4], "xx": [0, 1, 2], "1": [0, 1, 2, 3], "3": [0, 1, 2, 3], "2": [0, 1, 2, 3], "yy": [0, 1, 2], "30": [0, 1, 2, 3], "function": [0, 1, 2, 3], "take": [0, 1, 2, 3], "two": [0, 1, 3], "number": [0, 1, 3], "input": [0, 1, 3], "true": [0, 1, 2, 3], "first": [0, 1, 2, 3], "i": [0, 1, 2, 3], "ascend": 0, "order": [0, 1, 2, 3, 4], "second": [0, 1, 2, 3], "descend": 0, "x": [0, 2, 3], "coordin": 0, "point": [0, 2], "polygon": 0, "valu": [0, 2, 3], "tree": [0, 1, 2], "fals": [0, 1, 2, 3], "exampl": [], "output": [0, 1, 3], "leav": [0, 1, 2, 4], "all": 0, "leaf": 0, "graph": [0, 1, 2], "nfaulttre": [0, 4], "0": [0, 1, 2, 3], "newrel": [0, 1, 4], "port": [0, 1, 3], "indicesin": [0, 1], "indicesout": [0, 1], "time": [0, 1, 2, 3], "indicesprincip": [0, 1, 3], "append": 0, "end": [0, 2], "relat": [0, 1], "default": [0, 1, 3], "option": [0, 1, 2, 3], "ar": [0, 1, 3], "which": [0, 3], "appli": [0, 3], "thi": [0, 1, 3], "princip": [0, 1, 3], "root": [0, 1, 4], "sort": [0, 1, 3, 4], "updat": [0, 1, 4], "If": [0, 1, 2], "less": [0, 2], "than": [0, 1, 2], "maximum": 0, "add": [0, 1, 2], "new": [0, 1], "viewgraph": [0, 1, 2, 4], "dir": [0, 1, 2], "same": [0, 1, 3], "edg": [0, 1], "label": 0, "origin": [0, 1], "directori": [0, 1, 2], "where": [0, 1, 2], "save": [0, 1, 2], "definit": 3, "logic": 3, "gate": 3, "g_and": [3, 4], "valuesin": 3, "abov": 3, "code": 3, "cartesian": 3, "product": 3, "ordin": 3, "exempl": [], "g_or": [3, 4], "g_fdep": [3, 4], "integ": [1, 2, 3], "each": [1, 2, 3], "repres": 3, "param": [2, 3], "qubit": 3, "g_gen": [3, 4], "20": 3, "40": 3, "g_input": 3, "g_id": [3, 4], "g_not": [3, 4], "g_pand": [3, 4], "g_spare": [3, 4], "element": 3, "main": 3, "third": 3, "tensor": 3, "contract": 3, "given": [1, 2, 3], "negat": 3, "vector": [2, 3], "reduct": [3, 4], "combin": 3, "AND": 3, "pand": 3, "can": 3, "us": 3, "specifi": 3, "appelle": 3, "variabl": 3, "length": 3, "final": 3, "result": 3, "id_g": [3, 4], "id": [1, 3], "inord": [3, 4], "10": 3, "boolean": [2, 3], "contain": [2, 3], "answer": 3, "accord": 3, "respect": 3, "A": [2, 3], "event": 3, "occur": 3, "sublist": 3, "one": 3, "rank": 3, "correspond": 3, "expect": 3, "posit": [2, 3], "wa": 3, "from": 3, "smallest": 3, "highest": 3, "version": 3, "person": 3, "y": 3, "have": 3, "thei": [1, 3], "differ": 3, "exactli": 3, "term": 3, "target": 3, "removeempti": [3, 4], "5": 3, "remov": 3, "sub": 3, "item": 3, "4": [], "faulttreelib": [2, 4, 5], "modul": [4, 5], "faulttreerlib": [4, 5], "hassediagramlib": [4, 5], "logicdoorlib": [4, 5], "search": 5, "page": 5, "b": [], "faulttre": [0, 2, 4], "id_p": [0, 1], "faulttreer": [1, 4], "indivreliabilityv": [1, 2], "indivreliabilityfunc": [1, 2], "One": [1, 2, 4], "t": [1, 2], "autocomplet": [1, 4], "For": 1, "anoth": 1, "between": 1, "gener": [1, 4], "found": 1, "equal": [1, 2], "otherwis": 1, "shorter": 1, "current": [1, 2], "state": [1, 2], "board": 1, "self": [0, 1, 2], "nfaulttreer": [1, 4], "recursivereli": [1, 4], "comput": 1, "reliabl": [1, 2], "system": [1, 2], "its": 1, "compon": [1, 2], "recursivestrutur": [1, 4], "creat": [1, 2], "wai": 1, "make": 1, "easier": 1, "draw": [1, 2], "last": 1, "entri": 1, "relmat": 1, "valid": 1, "adjmat": 1, "parent": 1, "cut": [2, 4], "indivindex": 2, "collectcut": [2, 4], "p_gen": 2, "As": 2, "long": 2, "ha": 2, "been": 2, "reach": 2, "ncut": [2, 4], "downhassediagram": [2, 4], "indivlabel": 2, "getpolyfiab": [2, 4], "calcul": 2, "polynomi": 2, "outer": 2, "inner": 2, "ndownhassediagram": [2, 4], "link": [2, 4], "p_not": 2, "collectlink": [2, 4], "minim": 2, "check": 2, "alreadi": 2, "dictionari": 2, "nlink": [2, 4], "r": [], "titl": [], "descript": [], "int": 2, "uphassediagram": [2, 4], "evalu": 2, "nuphassediagram": [2, 4], "rubric": []}, "objects": {"": [[0, 0, 0, "-", "FaultTreeLib"], [1, 0, 0, "-", "FaultTreeRLib"], [2, 0, 0, "-", "HasseDiagramLib"], [3, 0, 0, "-", "LogicDoorLib"]], "FaultTreeLib": [[0, 1, 1, "", "FaultTree"]], "FaultTreeLib.FaultTree": [[0, 2, 1, "", "IdxNode"], [0, 2, 1, "", "InOrder2"], [0, 2, 1, "", "Leaves"], [0, 3, 1, "", "NFaultTree"], [0, 2, 1, "", "NewRelation"], [0, 2, 1, "", "Root"], [0, 2, 1, "", "Sort"], [0, 2, 1, "", "Update"], [0, 2, 1, "", "ViewGraph"]], "FaultTreeRLib": [[1, 1, 1, "", "FaultTreeR"]], "FaultTreeRLib.FaultTreeR": [[1, 2, 1, "", "AutoCompletion"], [1, 2, 1, "", "Generation"], [1, 2, 1, "", "IdxNode"], [1, 2, 1, "", "InOrder2"], [1, 2, 1, "", "Leaves"], [1, 3, 1, "", "NFaultTreeR"], [1, 2, 1, "", "NewRelation"], [1, 2, 1, "", "RecursiveReliability"], [1, 2, 1, "", "RecursiveStruturation"], [1, 2, 1, "", "Root"], [1, 2, 1, "", "Sort"], [1, 2, 1, "", "Update"], [1, 2, 1, "", "ViewGraph"]], "HasseDiagramLib": [[2, 1, 1, "", "Cut"], [2, 1, 1, "", "DownHasseDiagram"], [2, 1, 1, "", "Link"], [2, 4, 1, "", "Links"], [2, 5, 1, "", "One"], [2, 1, 1, "", "UpHasseDiagram"]], "HasseDiagramLib.Cut": [[2, 2, 1, "", "CollectCut"], [2, 2, 1, "", "InOrder2"], [2, 2, 1, "", "Leaves"], [2, 3, 1, "", "NCut"]], "HasseDiagramLib.DownHasseDiagram": [[2, 2, 1, "", "GetPolyFiab"], [2, 3, 1, "", "NDownHasseDiagram"], [2, 2, 1, "", "ViewGraph"]], "HasseDiagramLib.Link": [[2, 2, 1, "", "CollectLink"], [2, 2, 1, "", "InOrder2"], [2, 3, 1, "", "NLink"]], "HasseDiagramLib.UpHasseDiagram": [[2, 2, 1, "", "GetPolyFiab"], [2, 3, 1, "", "NUpHasseDiagram"], [2, 2, 1, "", "ViewGraph"]], "LogicDoorLib": [[3, 5, 1, "", "G_AND"], [3, 5, 1, "", "G_FDEP"], [3, 5, 1, "", "G_Gen"], [3, 5, 1, "", "G_ID"], [3, 5, 1, "", "G_NOT"], [3, 5, 1, "", "G_OR"], [3, 5, 1, "", "G_PAND"], [3, 5, 1, "", "G_SPARE"], [3, 5, 1, "", "ID_G"], [3, 5, 1, "", "InOrder"], [3, 5, 1, "", "Order"], [3, 5, 1, "", "Reductible"], [3, 5, 1, "", "RemoveEmpty"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:data", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "titleterms": {"faulttreelib": 0, "modul": [0, 1, 2, 3], "faulttreerlib": 1, "hassediagramlib": 2, "logicdoorlib": 3, "sourc": 4, "welcom": 5, "dft2hd2reliabilityr": 5, "": 5, "document": 5, "content": 5, "indic": 5, "tabl": 5, "exampl": [0, 1, 2, 3], "exempl": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to DFT2HD2ReliabilityR\u2019s documentation!": [[5, "welcome-to-dft2hd2reliabilityr-s-documentation"]], "Contents:": [[5, null]], "Indices and tables": [[5, "indices-and-tables"]], "source": [[4, "source"]], "FaultTreeLib module": [[0, "module-FaultTreeLib"]], "Examples:": [[0, "examples"], [1, "examples"], [2, "examples"], [2, "id1"], [3, "examples"], [3, "id1"], [3, "id2"], [3, "id3"], [3, "id4"], [3, "id5"], [3, "id6"], [3, "id7"], [3, "id8"], [3, "id10"]], "FaultTreeRLib module": [[1, "module-FaultTreeRLib"]], "HasseDiagramLib module": [[2, "module-HasseDiagramLib"]], "LogicDoorLib module": [[3, "module-LogicDoorLib"]], "Exemples:": [[3, "exemples"], [3, "id9"]]}, "indexentries": {"faulttree (class in faulttreelib)": [[0, "FaultTreeLib.FaultTree"]], "faulttreelib": [[0, "module-FaultTreeLib"]], "idxnode() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.IdxNode"]], "inorder2() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.InOrder2"]], "leaves() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.Leaves"]], "nfaulttree (faulttreelib.faulttree attribute)": [[0, "FaultTreeLib.FaultTree.NFaultTree"]], "newrelation() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.NewRelation"]], "root() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.Root"]], "sort() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.Sort"]], "update() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.Update"]], "viewgraph() (faulttreelib.faulttree method)": [[0, "FaultTreeLib.FaultTree.ViewGraph"]], "module": [[0, "module-FaultTreeLib"], [1, "module-FaultTreeRLib"], [2, "module-HasseDiagramLib"], [3, "module-LogicDoorLib"]], "autocompletion() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.AutoCompletion"]], "faulttreer (class in faulttreerlib)": [[1, "FaultTreeRLib.FaultTreeR"]], "faulttreerlib": [[1, "module-FaultTreeRLib"]], "generation() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.Generation"]], "idxnode() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.IdxNode"]], "inorder2() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.InOrder2"]], "leaves() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.Leaves"]], "nfaulttreer (faulttreerlib.faulttreer attribute)": [[1, "FaultTreeRLib.FaultTreeR.NFaultTreeR"]], "newrelation() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.NewRelation"]], "recursivereliability() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.RecursiveReliability"]], "recursivestruturation() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.RecursiveStruturation"]], "root() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.Root"]], "sort() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.Sort"]], "update() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.Update"]], "viewgraph() (faulttreerlib.faulttreer method)": [[1, "FaultTreeRLib.FaultTreeR.ViewGraph"]], "collectcut() (hassediagramlib.cut method)": [[2, "HasseDiagramLib.Cut.CollectCut"]], "collectlink() (hassediagramlib.link method)": [[2, "HasseDiagramLib.Link.CollectLink"]], "cut (class in hassediagramlib)": [[2, "HasseDiagramLib.Cut"]], "downhassediagram (class in hassediagramlib)": [[2, "HasseDiagramLib.DownHasseDiagram"]], "getpolyfiab() (hassediagramlib.downhassediagram method)": [[2, "HasseDiagramLib.DownHasseDiagram.GetPolyFiab"]], "getpolyfiab() (hassediagramlib.uphassediagram method)": [[2, "HasseDiagramLib.UpHasseDiagram.GetPolyFiab"]], "hassediagramlib": [[2, "module-HasseDiagramLib"]], "inorder2() (hassediagramlib.cut method)": [[2, "HasseDiagramLib.Cut.InOrder2"]], "inorder2() (hassediagramlib.link method)": [[2, "HasseDiagramLib.Link.InOrder2"]], "leaves() (hassediagramlib.cut method)": [[2, "HasseDiagramLib.Cut.Leaves"]], "link (class in hassediagramlib)": [[2, "HasseDiagramLib.Link"]], "links (in module hassediagramlib)": [[2, "HasseDiagramLib.Links"]], "ncut (hassediagramlib.cut attribute)": [[2, "HasseDiagramLib.Cut.NCut"]], "ndownhassediagram (hassediagramlib.downhassediagram attribute)": [[2, "HasseDiagramLib.DownHasseDiagram.NDownHasseDiagram"]], "nlink (hassediagramlib.link attribute)": [[2, "HasseDiagramLib.Link.NLink"]], "nuphassediagram (hassediagramlib.uphassediagram attribute)": [[2, "HasseDiagramLib.UpHasseDiagram.NUpHasseDiagram"]], "one() (in module hassediagramlib)": [[2, "HasseDiagramLib.One"]], "uphassediagram (class in hassediagramlib)": [[2, "HasseDiagramLib.UpHasseDiagram"]], "viewgraph() (hassediagramlib.downhassediagram method)": [[2, "HasseDiagramLib.DownHasseDiagram.ViewGraph"]], "viewgraph() (hassediagramlib.uphassediagram method)": [[2, "HasseDiagramLib.UpHasseDiagram.ViewGraph"]], "g_and() (in module logicdoorlib)": [[3, "LogicDoorLib.G_AND"]], "g_fdep() (in module logicdoorlib)": [[3, "LogicDoorLib.G_FDEP"]], "g_gen() (in module logicdoorlib)": [[3, "LogicDoorLib.G_Gen"]], "g_id() (in module logicdoorlib)": [[3, "LogicDoorLib.G_ID"]], "g_not() (in module logicdoorlib)": [[3, "LogicDoorLib.G_NOT"]], "g_or() (in module logicdoorlib)": [[3, "LogicDoorLib.G_OR"]], "g_pand() (in module logicdoorlib)": [[3, "LogicDoorLib.G_PAND"]], "g_spare() (in module logicdoorlib)": [[3, "LogicDoorLib.G_SPARE"]], "id_g() (in module logicdoorlib)": [[3, "LogicDoorLib.ID_G"]], "inorder() (in module logicdoorlib)": [[3, "LogicDoorLib.InOrder"]], "logicdoorlib": [[3, "module-LogicDoorLib"]], "order() (in module logicdoorlib)": [[3, "LogicDoorLib.Order"]], "reductible() (in module logicdoorlib)": [[3, "LogicDoorLib.Reductible"]], "removeempty() (in module logicdoorlib)": [[3, "LogicDoorLib.RemoveEmpty"]]}})